<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[西南交大教务模拟登陆]]></title>
    <url>%2F2019%2F01%2F29%2F%E8%A5%BF%E5%8D%97%E4%BA%A4%E5%A4%A7%E6%95%99%E5%8A%A1%E6%A8%A1%E6%8B%9F%E7%99%BB%E9%99%86%2F</url>
    <content type="text"><![CDATA[最近由于需要做一个获取学生课表的项目，就去研究了下如何模拟登录，并用Python成功模拟登录。在此记录一下自己的分析过程。&lt;!--more--&gt; 登录分析使用Chrome登录教务网，打开调试模式，使用NetWork记录点击“登录按钮”后发生的过程 点击登录后浏览器请求的地址为http://dean.vatuu.com/vatuu/UserLoginAction，这就是我们需要记录的一个url，模拟登录时就向改网址发送请求； 我们需要重点分析Header和cookie。查看Response Header，该网址返回的Header信息有个Set-Cookie字段；在Request-Headers中，有一个JSESSIONID UserLoadingAction是登录成功后跳转的一个页面。查看Request Header中的Cookie为学号+JSESSIONID，因此明白JSESSIONID以及如何获取它至关重要。 另一个问题就是验证码，我采用人工输入的方式。审查元素，查看验证码的接口，得到其地址。 复制这个地址，粘贴到地址栏，得到验证码。 我猜想验证码和JSESSIONID有很大关系。退出教务登录，打开调试工具的“Application-Cookies”可以看到保存的Cookie，清除 刷新验证码地址，可以看到会再次出现JSESSIONID 因此可以假设通过验证码获取JSESSIONDI 使用Python尝试登录123456789101112def get_jsessionid(): """ 访问登录界面，通过Response Header用于获取set-cookie """ s = requests.Session() r = s.get(get_photo_url) with open('./static/ranstring.jpg', 'wb') as file: file.write(r.content) get_head = r.headers set_cookie = str(get_head['Set-Cookie']) jessid = set_cookie.split(';')[0] return jessid 运行后，可以看到获取到了JSESSIONID。 之后模拟登录。 123456789101112131415161718jsessionid = get_jsessionid()full_cookie = 'username='+str(data['username'])+'; ' + str(jsessionid)log_msg = ""def login(): """ 登录 """ # 登录需要的cookie只有jsessionid headers['cookie'] = jsessionid data['ranstring'] = input("验证码：") # UserLoginAction res = requests.post( user_log_url, data, headers=headers, allow_redirects=True) log_msg = res.text log_msg = json.loads(log_msg) print(log_msg['loginMsg']) 看到出现教务返回的登录成功等字样就表示登录成功。 尝试获取课表时，却提示未登录。我认为UserLoadingAction这一步也是必须的。 再次分析 查看UserLoadingAction，发现向它传送的数据中有一个“loginMsg”字段，这正是点击‘’登录系统“成功后返回的字段的一部分 在登录时访问UserLoadingAction查看是否生效 123456789101112131415161718192021def login(): """ 登录 两步：UserLoginAction + UserLoadingAction """ headers['cookie'] = jsessionid data['ranstring'] = input("验证码：") # UserLoginAction res = requests.post( user_log_url, data, headers=headers, allow_redirects=True) # with open('./response.html') as file: # file.writer(response.text) log_msg = res.text log_msg = json.loads(log_msg) print(log_msg['loginMsg']) # UserLoadingAction headers['cookie'] = full_cookie data_loading = &#123; 'loginMsg': log_msg['loginMsg'] &#125; res = requests.post(user_loading_url, data=data_loading, headers=headers) 查看res，会提示登录成功，这时在访问课表的网址，就正常返回了课表 总结 正确的Header和Cookie很重要]]></content>
      <categories>
        <category>学校</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
</search>
